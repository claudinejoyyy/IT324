JANUARY 30, 2017 NOTES

HTTP (Hypertext Transfer Protocol)
	- application layer communications protocol used to access resources on the World Wide Web
	- invented by TIM-BERNERS LEE
	- jointly developed by W3C and IETF
Version History:
	HTTP 0.9 - historical purposes
	HTTP 1.0 - only a few left today
	HTTP 1.1 - most frequently used today
			 - RFC 2616
	HTTP 2 - increasing users today
		   - more low-level
		   - patterned after SPDY (by Google)

HTTP Fundamentals
*HTTP runs on top of TCP/IP using TCP Port 80 by default or TCP Port 443 for HTTPS
	IANA - Internet Assigned Numbers Authority
	ICANN -
	Network Socket - IP Address + Port Number
	SSL - Secure Socket Layer
	TLS - Transport Layer Socket
	"Encrypt" - to apply some transformation on the data
	*anything accessed on a site that starts with https:// is encrypted (secured tunnel)

*HTTP is based on a client-server architecture
	"The server provides services that the client consumes."
	Servers: 
		Origin Server - actual machine where needed data is stored
		Proxy Servers, Gateways, Tunnels
	Client: a.k.a. USER AGENTS
			can be a web browser, web crawlers/spiders, apps that use HTTP
			*Google bot - example of web crawler

*HTTP uses a request response standard protocol 
	- the client sends an HTTP request message to the server ("pull" protocol)
	- the server processes the request and replies within an HTTP response message ("polling" - check every now and then)
	- HTTP offers "push" protocol (server volunteers sending)

*HTTP is a stateless communications protocol (serve and forget)
	- servers do not keep information about clients in between requests

*HTTP provides support for other functionalities, such as: 
	- cache control (specify data that can and cannot be cached)
		"locality of reference"
	- content media type (MIME specification)
		MIME : Multipurpose Internet Mail Extensions 
			   e.g. text/html
	- language and character set specification
	- content/transfer coding 
		e.g. zip
		NOTE: compression of text reduces file size by 80 to 90%

FEBRUARY 2, 2017 NOTES
*continuation*

	- content negotiation
		e.g. accessing a web page from phone ("mobile friendly")
			 a web page that has 3 versions for 3 different languages
	- persistent connections >> to make our HTTP connection more effective
	- request pipelining >> sending requests one after another
		e.g. clients asks to keep the connection to servers open
	- authentication or authorization

HTTP RESOURCE ADDRESSING
*HTTP resources are identified using URI
	- scheme (http or https)
	- authority >> user credentials (deprecated because of security measures)
				>> host
					- domain name (resolved to an IP address using DNS)
				>> port number (default: 80 for http)
		e.g. http://usr:pwd@server.org:81/info/profile.php?

	- path to resource (resolved relative to the document root)
		*resources may be static or dynamic
	- query >> usually starts with a "?"
			>> "&" separates parameters
			>> may be URL encoded
			>> "+" stands for space
		e.g. product.php?id=1234&color=red&size=XL
	- fragment identifier >> starts with a "#"
		a.k.a. BOOKMARK - usually identified by a key value														